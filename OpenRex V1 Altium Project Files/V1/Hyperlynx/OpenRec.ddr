// HyperLynx DDRx Setup File
{Version 1.10}

// The user may place any persistent comments in this section
{Notes
}

// The HyperLynx BoardSim project file
{Project "OpenRec.pjh"}

// Multiboard project board list---
// ...Format:
//       boardName = HYPFileName;
{Boards
   // ***Not a multiboard project***
}

// Controller, DRAM, PLL and Register part types used in the DDRx simulations
// ...Format:
//       partName = IBISModelFile, IBISComponentName;
//    where
//       "partName" is the part type specified in the HYP file
//       "IBISModelFile" is the IBIS file modeling the part
//       "IBISComponentName" is a Component in the IBIS file
{PartTypes
   "U1" = "21x21_imx6q_autmtv_004.ibs", "iMX6Q";
   "U2" = "v80a.ibs", "MT41J256M16HA";
   "U3" = "v80a.ibs", "MT41J256M16HA";
   "U4" = "v80a.ibs", "MT41J256M16HA";
   "U5" = "v80a.ibs", "MT41J256M16HA";
}

// Controller, DRAM, PLL and Register part instances used in the DDRx simulations
// ...using Bxx:Uyy syntax instead of BoardSim's Uyy_Bxx format
// ...because that's the format that the DDRx Wizard displays...
// ...Format:
//       partRefDes = partName;
//    where
//       "partRefDes" is the part's reference designator
//       "partName" is the part type, declared in the "PartTypes" record
{Parts
   "U1" = "U1";
   "U2" = "U2";
   "U3" = "U3";
   "U4" = "U4";
   "U5" = "U5";
}

// Setup and Simulation Options
{Options
   DDRType = DDR3;               // DDR, DDR2, DDR3, DDR4, LPDDR, LPDDR2, LPDDR3, LPDDR4, NV_DDR2 or NV_DDR3
   DIMMType = UDIMM;             // UDIMM or RDIMM
   DataTiming = Enabled;         // Disabled or Enabled
   DataSimulations = WriteOnly;     // Both, ReadOnly or WriteOnly
   ACCTiming = 1T;               // Disabled, 1T or 2T
   StrobeTiming = Enabled;       // Disabled or Enabled
   Thresholds = All;             // Vtt or All
   RoundTripTime = Disabled;     // Disabled or Enabled
   UseTLC = Disabled;            // Disabled or Enabled
   DataBitInversion = Disabled;     // Disabled or Enabled
   DynamicTerm = Disabled;       // Disabled or Enabled

   // Number of bits to simulate: 
   BitNumber = 128;              // 8 to 32768 

   // Crosstalk simulation effects; permissible values:
   //    = Disabled;
   //    = Geometric, MaxAgressorDistance, MinCoupledSegLen, HorizontalNbrLimit, VerticalLayerLimit;
   //    = Electrical, MinCoupledVoltage;
   Crosstalk = Geometric, 15.00 mils, 100.00 mils, 1, 1;    // Disabled, Geometric or Electrical

   PowerAware = Disabled;        // Disabled or Enabled

   // File to specify write/read leveling deleys in DDR3/LPDDR3/DDR4/LPDDR4
   DelaysFile = "DDR3Delays_autogenerated.txt";
   UseDelaysFile = Enabled;      // Disabled or Enabled

   CLK_STB_WL = Enabled;         // Disabled or Enabled
   STB_DQ_WR_WL = Enabled;       // Disabled or Enabled
   STB_DQ_RD_WL = Enabled;       // Disabled or Enabled
   STB_DQ_RD_WL_PER_BIT = Enabled;     // Disabled or Enabled
   CLK_CA_WL = Disabled;         // Disabled or Enabled
   SameCornerSkews = Disabled;   // Disabled or Enabled
   DoubleRunForLeveling = Disabled;    // Disabled or Enabled
   // Trace Coupling
   MinTotalCoupledTraceLength = 500.00 mils;    // Min total coupled trace length
   SameNetCoupling = Enabled;    // Disabled or Enabled
   NonParallelCoupling = Enabled;   // Disabled or Enabled

   // Advanced Coupling simulation effects: Area Fills, Pin, Trace
   // Area Fill Coupling; permissible values:
   //    = Disabled;
   //    = Enabled, AreaFillSearchDist, IgnoreShorterThan;
   AreaFillCoupling = Enabled, 40.00 mils, 40.00 mils;   // Disabled or Enabled

   // S-paramter Coupling; permissible values:
   //    = Disabled;
   //    = Enabled;
   SparamCoupling = Disabled;    // Disabled or Enabled

   SparamMinFreq = 0.1 MHz;      // S-parameter coupling Min Frequency
   SparamMaxFreq = 20000 MHz;    // S-parameter coupling Max Frequency

   // Package Coupling; permissible values:
   //    = Disabled;
   //    = Enabled, PackageCouplingThreshold (dB);
   PkgCoupling = Enabled, -20;   // Disabled or Enabled

   // Connector Coupling; permissible values:
   //    = Disabled;
   //    = Enabled, ConnectorCouplingThreshold (dB);
   ConnCoupling = Enabled, -20;     // Disabled or Enabled

   // 3D-EM solved area Coupling; permissible values:
   //    = Disabled;
   //    = Enabled, 3daCouplingThreshold (dB);
   3daCoupling = Enabled, -20;   // Disabled or Enabled

   // Same S-parameter coupling  threhold; permissible values:
   //    = Disabled;
   //    = Enabled, SameSparamCouplingThreshold (dB);
   SameSparamCoupling = Enabled, -20;     // Disabled or Enabled

   Corners = Typical;            // IC model corners: None,  or Slow, Typical, and/or Fast
   VaryRef = Enabled;            // Disabled or Enabled
   MaxRunTime = 30.0 Min;        // Maximum run-time per net
   SimulationRuns = Batch;       // Batch and/or Audit
   XLSAutoFormat = Disabled;     // Disabled or Enabled
   CreateHTMLReport = Enabled;   // Disabled or Enabled
   SavePDF = Disabled;           // Disabled or Enabled
   IncludeImgsRpt = Disabled;    // Disabled or Enabled
   NonPassingImgsRpt = Enabled;     // Disabled or Enabled
   SaveAll = Enabled;            // Disabled or Enabled
   SavePoints = Disabled;        // Disabled or Enabled
   AllCasesReport = Enabled;     // Disabled or Enabled
   WorstCasesReport = Enabled;   // Disabled or Enabled
   ViolationCasesReport = Enabled;     // Disabled or Enabled
   UseXLSReport = Disabled;      // Disabled or Enabled
   UseAC_FromIBIS = Enabled;     // Disabled or Enabled
   AddTimeTagsToFolder = Enabled;   // Disabled or Enabled
   OutputDirectoryName = "DDR_Results";   // Output Directory Name
   ControllerMeasurementLocation = "At Die";    // Controller measurement location
   DRAMMeasurementLocation = "At Pin";    // DRAM measurement location
   Supply_V = 1500 mV;           // Selected supply voltage (mV)
   DataStrobeType = Differential;   // SingleEnded or Differential
   MaxOvershoot = Default;       // Default, or threshold voltage (mV)
   MaxUndershoot = Default;      // Default, or threshold voltage (mV)
   MaxOvershootCK = Default;     // Default, or threshold voltage (mV)
   MaxUndershootCK = Default;    // Default, or threshold voltage (mV)
   MaxOvershootACC = Default;    // Default, or threshold voltage (mV)
   MaxUndershootACC = Default;   // Default, or threshold voltage (mV)
   MaxOvershootArea = Default;   // Default, or area limit (V*ns)
   MaxUndershootArea = Default;     // Default, or area limit (V*ns)
   MaxOvershootAreaCK = Default;    // Default, or area limit (V*ns)
   MaxUndershootAreaCK = Default;   // Default, or area limit (V*ns)
   MaxOvershootAreaACC = Default;   // Default, or area limit (V*ns)
   MaxUndershootAreaACC = Default;     // Default, or area limit (V*ns)
   MaxOvershoot_Read = Default;     // Default, or threshold voltage (mV)
   MaxUndershoot_Read = Default;    // Default, or threshold voltage (mV)
   MaxOvershootArea_Read = Default;    // Default, or area limit (V*ns)
   MaxUndershootArea_Read = Default;   // Default, or area limit (V*ns)
   VIX = Default;                // Default, or VIX limit (mV)
   VID_AC = Default;             // Default, or VID(AC) Min limit (mV). In DDR3 - VIHdiff/VILdiff(AC)
   VID_DC = Default;             // Default, or VID(DC) Min limit (mV)
   VSEH_VSEL = Default;          // Default, or VSEH/VSEL limit (mV)
   TVAC_TDVAC = Default;         // Default, Disabled or Enabled
   MonotonicityThreshold = 0.1 mV;     // Monotonic threshold value (mV)
   ReportJitter = Enabled;       // Disabled or Enabled
   IgnoreEdges = 1;              // Initial simulation edges to ignore (0-32)
   Slots = 0;                    // Number of DIMM slots (0-4)
   RanksPerSlot = 1;             // Number of DRAM ranks per slot (1-8)
}

// Data rate of the interface (MHz)
// ...Standard DDR3 rates include 800, 1066, 1333, 1600, 1866 and 2133
{DataRate 2133}

// Controller part reference designator
{Controller U1}

// DRAM Rank part reference designators---
// ...A "Rank" is a group of DRAM components that functions together
// ...A full DDRx interface may contain up to four "Ranks," which typically
//    consists of two "Slots" (or DIMMs), each with two slot "Ranks"
// ...A "Slot" typically identifies a board (DIMM) in a multiboard implementation
// ...Here, each global "Rank" grouping is an element of a [Slot,slotRank] array
//    Slots and Ranks are indexed from 1, not 0 (i.e., they should be either "1" or "2")
// ...Format:
//       Slot[slot] = boardName;        // If multiboard; slot=1,2
//       Rank[slot,rank] = PartList;    // slot=1,2; rank=1,2
{DRAMRanks
   Rank[1, 1] = U2..5;
}

// Data Nets---
// ...All Data-type Nets are assumed to be on the same board as the Controller
// ...Only the (+) side of a differential strobe pair is listed
// ...Format:
//      DataStrobeNet : DataMaskNet | DataNetList;
//   where the DataMaskNet and the data nets in DataNetList are all associated with DataStrobeNet
{DataNets
   DRAM_DQS0_P: DRAM_DQM0 | DRAM_D0..7;
   DRAM_DQS1_P: DRAM_DQM1 | DRAM_D8..15;
   DRAM_DQS2_P: DRAM_DQM2 | DRAM_D16..23;
   DRAM_DQS3_P: DRAM_DQM3 | DRAM_D24..31;
   DRAM_DQS4_P: DRAM_DQM4 | DRAM_D32..39;
   DRAM_DQS5_P: DRAM_DQM5 | DRAM_D40..47;
   DRAM_DQS6_P: DRAM_DQM6 | DRAM_D48..55;
   DRAM_DQS7_P: DRAM_DQM7 | DRAM_D56..63;
}

// Clock Nets---
// ...All Clock Nets are assumed to be on the same board as the Controller
// ...Only the (+) side of a differential clock pair is listed
{ClockNets
   DRAM_CLK0_P;
}

// Address/Command Nets---
// ...All nets are assumed to be on the same board as the Controller
// ...Address and Command nets differ from Control nets in that Control nets
//    always use 1T timing, whereas Address and Command nets may use either
//    1T or 2T timing.
// ...Address/Command nets include:
//       Address:  A0..n
//       Bank Address: BA0..n
//       Command:  RAS, CAS, WE
{AddrCommNets
   DRAM_A0..14, DRAM_CAS_B, DRAM_RAS_B, DRAM_SDBA0..2, DRAM_WE_B;
}

// Control Nets---
// ...All nets are assumed to be on the same board as the Controller
// ...Address and Command nets differ from Control nets in that Control nets
//    always use 1T timing, whereas Address and Command nets may use either
//    1T or 2T timing.
// ...Control nets include:
//       Chip Select:  S0..n
//       Clock Enable: CKE0..n
//       On-Die Termination:  ODT0..n
{ControlNets
   DRAM_CS0_B, DRAM_SDCKE0, DRAM_SDODT0;
}

// ODT Models---
// ...ODT Models can be specified either by:
//       IBIS Component name -- Applies models to a group of parts; the IBIS Component
//          name should be one declared in the "PartTypes" record.
//       Part Reference Designator -- Applies models to a single part; the reference
//          designator should be one declared in the "Parts" record.
// ...Generally, it is easier to specify models by IBIS Component name, as all parts defined
//    by a common IBIS model would typically use the same ODT model selections.
// ...Formats:
//       ibisComponentName = ibisModelSelectorList;
//       partRefDes = ibisModelSelectorList;
//    ...where:
//          "ibisComponentName" is the IBIS Component name.  If the Component name
//             is ambiguous because multiple IBIS files use the same Component identifier,
//             specify it as "ibisFileName[ibisComponentName]".
//          "partRefDes" is an individual component's reference designator
//          "ibisModelSelectorList" is a list of IBIS Model Selector specifiers.
//          ...Each Model Selector specifier is of the form:
//             msName(odtDisabledModel, odtEnabledModel)
//          ...For example, "DQS(NO_ODT_MODEL, ODT_75_MODEL)"
{ODTModels
   "iMX6Q" = ddr(ddr3_sel11_ds111_mio, ddr3odt_t40_sel11_mi);
   "MT41J256M16HA" = DM(DM_INPUT_2133, DM_ODT40_2133), DQ(DQ_40_2133, DQ_40_ODT40_2133), DQS(DQS_40_2133, DQS_40_ODT40_2133);
}

// ODT Behavior---
// ...Optional...required only for non-standard behaviors
// ...Format:
//       operation[Slot#] = EnabledDeviceList;
//    ...where:
//          "operation" is either "Read" or "Write"
//          "EnabledDeviceList" is a list of devices that have ODT enabled for the operation:
//             None              -- no ODT enabled
//             Controller        -- the Controller device
//             Rank[slot,slotRank]   -- DRAM devices in Rank[slot,slotRank]
//    Slots and Ranks are indexed from 1, not 0
// ...If a particular relevant operation is not specified, "standard" behavior is assumed
//    (refer to Micron Technology document TN-47-07, Tables 2 and 3)
{ODTBehavior
   // ***Using Default ODT Behaviors***
}

// Non-ODT IBIS Model Selectors---
// ...These are used when a signal uses a Model Selector rather than a Model
// ...These can be specified either by:
//       IBIS Component name -- Applies models to a group of parts; the IBIS Component
//          name should be one declared in the "PartTypes" record.
//       Part Reference Designator -- Applies models to a single part; the reference
//          designator should be one declared in the "Parts" record.
// ...Generally, it is easier to specify models by IBIS Component name, as all parts defined
//    by a common IBIS model would typically use the same model selections.
// ...Formats:
//       ibisComponentName = ibisModelSelectorList;
//       partRefDes = ibisModelSelectorList;
//    ...where:
//          "ibisComponentName" is the IBIS Component name.  If the Component name
//             is ambiguous because multiple IBIS files use the same Component identifier,
//             specify it as "ibisFileName[ibisComponentName]".
//          "partRefDes" is an individual component's reference designator
//          "ibisModelSelectorList" is a list of IBIS Model Selector specifiers.
//          ...Each Model Selector specifier is of the form:
//             msName(ibisModelName)
//          ...For example, "CLKIN(CLKIN_1066)"
{IBISModelSelectors
   "iMX6Q" = ddr_non_odt(ddr3l_sel11_ds110_mio);
   "MT41J256M16HA" = CLKIN(CLKIN_1066), INPUT(INPUT_1066);
}

// Timing Models---
// ...Timing Models can be specified either by:
//       Part Type -- Applies models to a group of parts; the Part Type
//          identifier should be one declared in the "PartTypes" record.
//       Part Reference Designator -- Applies models to a single part; the reference
//          designator should be one declared in the "Parts" record.
// ...Generally, it is easier to specify models by Part Type, as all parts defined
//    by a common type would typically use the same timing model selections.
// ...Formats:
//       partType = timingModelFile, speedGrade;
//       partRefDes = timingModelFile, speedGrade;
//    ...where:
//          "timingModelFile" is the timing model file name
//          ...If this field is "", the default model file is used
//          "speedGrade" is the speed grade of the part, identified by one of:
//             DDR_800, DDR_1066, DDR_1333, DDR_1600, DDR_1866 or DDR_2133
//          ...If this field is "", the default speed grade for the DDR type and data rate is used
// ...Timing models (files and/or speed grades) only need to be specified if they are non-default.
{TimingModels
   // ***Default Timing Models will be used***
}

// Disabled Nets---
// ...All nets are assumed to be on the same board as the Controller
// ...These nets are from the Data, Data Mask, Data Strobe, Address, Command, and Control
//    net groups, that are excluded from simulation.
{DisabledNets
   // ***No Disabled nets specified***
}

// Nets With Manual Stimulus---
{ManualStimNets
   // ***No nets with Manual Stimulus specified***
}

// All Stimulus ---
// ...Format:
//      Net = bit pattern;
//   where bitpattern is a list of 0s and 1s
{AllStimNets
   DRAM_A0 = 11001000001111111010100100100110101011101101101110100111111001000000000101000110110000001001011000111110001010110001111000101110;
   DRAM_A1 = 10001000111111111110100000100101010101110010000101001011000011010111011010110110010001101111110100000001101100000101011001000100;
   DRAM_A2 = 00111000100111100110001110111101010011001011010011011010011110111101111001001001010111110001101000100011101001011000110100001101;
   DRAM_A3 = 01100000011011011010010011011110101110111100000010100011100110001011000010011000100100010101100100111011101000101111000000111110;
   DRAM_A4 = 00010101010011100110101011100010101010001100010111110010101111111001100000110111111010100111111000110011101001010010111100110001;
   DRAM_A5 = 01011000100111001011011010001101011110011011111010111110010100101000110111010110001110000111100100101110001011101010001100010111;
   DRAM_A6 = 11011101101111110000100000110001011010110011100100111110010011000000110100111001000000011101111000001100001010100011100000011010;
   DRAM_A7 = 11011001000111010111110011010010100111111100101111010000100001111100101001101011000011011111010100110001101011000001100010101101;
   DRAM_A8 = 01101100001110000100010001001010100010110100100001000011100100000100001101010101001101000101101000000101111110001010101101011010;
   DRAM_A9 = 10100011111011000011010000001001111111110011001010111100010000010001100001000101111100101001000101011000101000101000111010101000;
   DRAM_A10 = 01000100111010010101011011010101111001010011111100001011000101111111000001001010100000010111011000011010111100100000100101100001;
   DRAM_A11 = 00001010011111100011011000110010011110010100011101100101111101000001011100001011010001110011000101000101000010010010110111000010;
   DRAM_A12 = 10111100110110011001110010001110011001111100011001100111110000111011011100100100011111101100011000100011011101100101111001001001;
   DRAM_A13 = 01101010000111110111100111101101100110110010110100001001001010101100000100110100111100111001010101011110100010010011111011111011;
   DRAM_A14 = 10011101000110001101010011111101100100111010001010100010000001000110100110101010110010101000001000111110111111011110110000110010;
   DRAM_CAS_B = 11010010100011101110100110101110011111101101100001001100111011111111011001111010000110001001100101100011100101111000100011010001;
   DRAM_CS0_B = 01100111101010111101011000110010011100011101111111011100111110000110111011010110111000010010011010100001111110110111010100010110;
   DRAM_D0 = 11011011010101111010001111010101100101001010000110100100011111010011100101010010001011010111100101110010000101010000100111100000;
   DRAM_D1 = 01100110011110111001100001101001101101110010110011110101011110111011100111111101000101001000011011010000011100011101011010111101;
   DRAM_D2 = 00101011111101011110101101001010010101001101010010111000101100000110111110001100100100100101110101101101100110000101101010101010;
   DRAM_D3 = 11011110110110100100100111010010010101110101000100111001101011111011011110110011101000011000101011001101111000011100000010100101;
   DRAM_D4 = 10000010001000001100100100010001101100100010101111010101110001101110101010100011011001111101100101010101100110101110100010010111;
   DRAM_D5 = 10110110000010110100001110001101101100010010000101000101111110001100001010001101010111100110111011010111111011100111001111001110;
   DRAM_D6 = 11111000100100011000011111100010010100000101101110011011000000111011010111101101110100100111100101001010000101000110111110110101;
   DRAM_D7 = 00010111001110000000101111011110011110101100110000001100001101000001110011000001111010110100111011101010011011001111000011111110;
   DRAM_D8 = 01011000110100000101011110111101100101000011011001100011100101010011001111010001101110010100010101010011100001101101110111011100;
   DRAM_D9 = 01101111111110000000110100100101100111101011101101100000100000110001101101101110110000101100101011110001111000101010011011010101;
   DRAM_D10 = 01100101011000100101110010100110011101101100011100001110010010000100110010111111000011001000000100101110100011111100011011100110;
   DRAM_D11 = 11100111011010010100011100111010011111001100001010111100010001111100110000110000001101000110011011101100110010100001010111101001;
   DRAM_D12 = 10101101101100110001010001011101100110001011000001000010100010101000101010110000101100001010000100110001000010010111000101101111;
   DRAM_D13 = 11010110100110001001011111100001111111000011011011010101100111001100001000011110100000010000011011111101010011001001011010101010;
   DRAM_D14 = 10011100000000100101001000000010000110001100110010111010011111111001110111001110010001110000010100100000100000111111001101011101;
   DRAM_D15 = 00111100000111111001110110110010000110100110111111111011000010000011010100010011000111101010001011000010110101110010000010000010;
   DRAM_D16 = 00110100110000110101100011010001111011110001110110110111111100010100001001000010110100101000100100111101100001011010001000110000;
   DRAM_D17 = 00000101111011111101011011001101111110000001100000111111110011110111001101101101111011111010011011011011110101010011000110111001;
   DRAM_D18 = 01011100000100011000100010001010000011110110000011010011001001000100010000101100111110011110100100000110000011000001000100001010;
   DRAM_D19 = 11100101011111101011001001010110000101001111000101000010001110111110111001000011110000100000011010000110010110011000101111010001;
   DRAM_D20 = 11101101001000001100001000110101110010010000001110011010111000100011000100110011000011000100110100011011100111101001011100101011;
   DRAM_D21 = 01011101000111111011100000001101110101101000010100001010111101001010100110001101011101011011101110111100010110110000100011100010;
   DRAM_D22 = 10100111111000011100100001101110001010111111111101100100001101111111111101011101101100010100100100000011100100000010010000000001;
   DRAM_D23 = 01010100100011000110100011110010001100001111100001100111011000000011111110110000100000001111111110100001110101000101111101101110;
   DRAM_D24 = 00010111010100011000110100111101110010111000111000001000101011011110100001110101000001101110100100111100000100100011011101011000;
   DRAM_D25 = 10110100010111000010001010110001110100010000101110111011101000110110000011111010001111000101111110111110010001101110110101010100;
   DRAM_D26 = 00111110100000100000011111010010000001011111001101000101110010000010111100101011111110101000010100100101100111111001000101110010;
   DRAM_D27 = 10001101111111010010100011101010000101110111011011010011111111101000011011010100000011110111101110001111010011100110111000111101;
   DRAM_D28 = 11000110001001110101011111001001111001110000010010111101000111100011000110000100110110010010000110110010101101010000001001000111;
   DRAM_D29 = 01100111001011000110110001010101111101110000011111011110001010001001000110001010111000101111011110010010110010001101100100011111;
   DRAM_D30 = 11100111111101100001110100010010000000110010110010110001100110111111011011001010011011001010000111001011001100110101100000101101;
   DRAM_D31 = 01010111100111111010011100001110000100011010000100100000100011010101111010100111010101011001011110011001010000111100101100100100;
   DRAM_D32 = 00011111110001100001011101101101100000010101100111011100010001011000000111110110100100011000010111000110101010011110110100010100;
   DRAM_D33 = 11011010110111111011010111011101100110111101110001001100010110010100100001001001111000000011001110100100010001010110101000101100;
   DRAM_D34 = 10010111000001110101001100111110011001001010000010000100100000000000111110111001001001100011100111011001101010010110111010011110;
   DRAM_D35 = 10100010011001101111110110100010011110111010110100000101100101100000110101010111000111011011011110111101110011011111100101011011;
   DRAM_D36 = 10110110100101001011100111100101100001101101011101101000011100100101101010010111010110110111100111100000001001101101110010111111;
   DRAM_D37 = 00000010101101111011011100111001100011010101000001101001000001101111001000111001001011101001011110100010010110111010111101110011;
   DRAM_D38 = 01001100011001011010101111011010011000001010111100001101111011111100100011001001111110101101110111111101101001001100111111000101;
   DRAM_D39 = 01111011000101001011001101100010010011110010001010111101110000011111000000110100110000110111101111011010010100000001110001001000;
   DRAM_D40 = 01100101111001011110001000000001101010000101101001000011001010011000011101100101010011000111100111101111101010100110100011101000;
   DRAM_D41 = 11010011110000000111100100111101101010110100111111010100001101010010011101001010011101110101111111001101110100101001011001100000;
   DRAM_D42 = 10010101000101001010100001010010010011100011011110111011111111000111000001001010101100010111100111010010001110101111101011011010;
   DRAM_D43 = 11100010000100010110101111001110010010001011111011011000111010100010100101000100110000001101111111010100010111100010000100000011;
   DRAM_D44 = 10011101100001111010110000001101101011000100010010110110001110100111011000011100000001101001010111001001111100011010100111010011;
   DRAM_D45 = 00101000001100000010001111010101100001001100001100100101011011101111111000100010100111010111101111101001011111000011001010011011;
   DRAM_D46 = 00100100111001100110011010110110011011001011000111011010100001110010100100110010000111111011000111010100111101110000111010101001;
   DRAM_D47 = 10000000111000100110000000001010011001101011010101001011101110011000100110111111001011100101011111110110111100111001000010110100;
   DRAM_D48 = 01000100011101100011010011101101000010101100100110000011110001011010111101111010111110100011000110101101011111011001110010000000;
   DRAM_D49 = 10110001010100111110110001110001000000000110110000000011111100010000011111010101100000111000011111101111011010010000000111000100;
   DRAM_D50 = 11111100101001110011110000110010111010001001110001101111000100001111101001000101010011011001010110110010111110010010010110100010;
   DRAM_D51 = 01011001100000101000011000100010100000000001100101111110000001100101001011111011011101101010001111110010011010010111011011101111;
   DRAM_D52 = 10010101000000000111111001010001011001010110001100000011100011100011010110001011111100001111100110101011111100100011011110011111;
   DRAM_D53 = 01101000001000111101010011101101011001100111000010110010100000101001110010100101110000010000011111000001111001111111010011010111;
   DRAM_D54 = 00100111110100011011000111001010100001110000001001011010010010110000001110100101000001010101100110111110011001001001000011010101;
   DRAM_D55 = 10100000111100011101110011010110100001001000011011011010010101011000101110001000111111011000011101011100011001010110011111011100;
   DRAM_D56 = 00101010011000011011100110010101011100111111111011110100101111011101110011111001001111110101110110000101111011100000001101100100;
   DRAM_D57 = 10011000110000001001111000001101011001001111101111010111100010010100110011000110000011101110101100000100011010101101000010111100;
   DRAM_D58 = 11000010001000001110101111101110101100011000111110110000011110001001101011010110100110101111100110011001111011100111000101001110;
   DRAM_D59 = 00111001000000010101000001010010101010110000101000100011010011100111001001101000101000110100111100111011111110101100001010000011;
   DRAM_D60 = 11110010100100111110001100111101010101111111000011011101111000100000110110111000011011010101100110000110011000011111011000110111;
   DRAM_D61 = 01000011100100000101100100100001010010110111011101001011111111100011010100110111000101100100111100100010011101000110100110101011;
   DRAM_D62 = 00011011010000101010000101100010101101110000000110000101001101110100001010110110110100000000010110111111110000110110010100011101;
   DRAM_D63 = 11101011011000100000101110111010101011010000010100000110001100011110001000011001111000011110101100111101011101101111111110010000;
   DRAM_DQM0 = 10100011111000100110111111011001011100010110110101101001111100011111010001001010111001011010000110100010110011011101011100011000;
   DRAM_DQM1 = 10001010111001110100001111100101011011111110000001111000111001011111110000010101110111001000011100000100111111111000111011010000;
   DRAM_DQM2 = 10100010001100110100011110000010100110110001100000100100000001001011000101000101000111101000000110110001010101011101011000100010;
   DRAM_DQM3 = 00010010000101100100010100011110100010111001100110110101011000100011100101101011001011010010011100010001011110010000110101101011;
   DRAM_DQM4 = 01011000111000000001010011011101011111101110001101011100100010110110111000101011101110110000010111001100010100100110000101001010;
   DRAM_DQM5 = 00111011100001111000111101001101011010011110110011011101101101100000111101000100100000111010001100001110011100111001111101000011;
   DRAM_DQM6 = 01110000110000000101110000001110111111001001011011110001010111110110100000110101010011110110100111000101110110001111001101110001;
   DRAM_DQM7 = 11001011111001011000011111010010111001110001001111000001111010011100000010001010001101101000011100100111111001010010100000100100;
   DRAM_RAS_B = 10000001000110010101101000110101000111001110111010111111000111001011111101011001111100001100100111011010010110101000100001010001;
   DRAM_SDBA0 = 11100011011101001101010110001001000001110110001100101100000010011001011110110010010000010010011100111010011011000010101100011100;
   DRAM_SDBA1 = 10101001101010001001000011101010111110100001101111000011100000001010000101010010110001010100110111100010010101100000111001101010;
   DRAM_SDBA2 = 00011010100001011001111011110010111100010001111001000100100111100001000111111100110110000111101100100000011011101001100100010111;
   DRAM_SDCKE0 = 00101000011011111101100010110001000110000111010010001010010101111100011000101100000111100110100111111101110101001001110100100110;
   DRAM_SDODT0 = 10011000000001000001101000101101001100101111111100011000010110100100111011010011011011011101111101011101111000000000111000101111;
   DRAM_WE_B = 01010000110111111100101011000010110101000000010101100110101100110001000110000010101110111000000111100100010010110010111000000101;
}

// Write Leveling---
// ...All Nets are assumed to be on the same board as the Controller
// ...Only the (+) side of a differential strobe pair is listed
// ...Format:
//      Net = WriteTo Slot1 Delay, WriteTo Slot2 Delay, ...ReadFrom Slot1 Rank1 Delay,... ;
//   where the Delays are listed in picoSeconds
{WriteLevelingTyp
   DRAM_D0 = -8;
   DRAM_D1 = -9;
   DRAM_D2 = 2;
   DRAM_D3 = 16;
   DRAM_D4 = -2;
   DRAM_D5 = -4;
   DRAM_D6 = 9;
   DRAM_D7 = -1;
   DRAM_D8 = 7;
   DRAM_D9 = 5;
   DRAM_D10 = 39;
   DRAM_D11 = 17;
   DRAM_D12 = 26;
   DRAM_D13 = 25;
   DRAM_D14 = 38;
   DRAM_D15 = 30;
   DRAM_D16 = 9;
   DRAM_D17 = 9;
   DRAM_D18 = 5;
   DRAM_D19 = 15;
   DRAM_D20 = 20;
   DRAM_D21 = 19;
   DRAM_D22 = 13;
   DRAM_D23 = 10;
   DRAM_D24 = -27;
   DRAM_D25 = 16;
   DRAM_D26 = -15;
   DRAM_D27 = 6;
   DRAM_D28 = -13;
   DRAM_D29 = -11;
   DRAM_D30 = -11;
   DRAM_D31 = -4;
   DRAM_D32 = 20;
   DRAM_D33 = 16;
   DRAM_D34 = 9;
   DRAM_D35 = -4;
   DRAM_D36 = 24;
   DRAM_D37 = 23;
   DRAM_D38 = 23;
   DRAM_D39 = 16;
   DRAM_D40 = 5;
   DRAM_D41 = 10;
   DRAM_D42 = 12;
   DRAM_D43 = 1;
   DRAM_D44 = 19;
   DRAM_D45 = 13;
   DRAM_D46 = -4;
   DRAM_D47 = 3;
   DRAM_D48 = 3;
   DRAM_D49 = -6;
   DRAM_D50 = -19;
   DRAM_D51 = -7;
   DRAM_D52 = 11;
   DRAM_D53 = -6;
   DRAM_D54 = -22;
   DRAM_D55 = -16;
   DRAM_D56 = -10;
   DRAM_D57 = 16;
   DRAM_D58 = 10;
   DRAM_D59 = 23;
   DRAM_D60 = 10;
   DRAM_D61 = 19;
   DRAM_D62 = 17;
   DRAM_D63 = 10;
   DRAM_DQM0 = 5;
   DRAM_DQM1 = 20;
   DRAM_DQM2 = 14;
   DRAM_DQM3 = -27;
   DRAM_DQM4 = 19;
   DRAM_DQM5 = -2;
   DRAM_DQM6 = -12;
   DRAM_DQM7 = 8;
   DRAM_DQS0_P = 673;
   DRAM_DQS1_P = 679;
   DRAM_DQS2_P = 556;
   DRAM_DQS3_P = 585;
   DRAM_DQS4_P = 423;
   DRAM_DQS5_P = 424;
   DRAM_DQS6_P = 267;
   DRAM_DQS7_P = 301;
}
{WriteLevelingSlow
}
{WriteLevelingFast
}

{End}
